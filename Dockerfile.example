# Dockerfile pour l'application Spring Boot
# Multi-stage build pour optimiser la taille de l'image

# Stage 1: Build
FROM maven:3.9-openjdk-17-slim AS builder

WORKDIR /app

# Copier les fichiers de configuration Maven
COPY pom.xml .
COPY src ./src

# Build de l'application
RUN mvn clean package -DskipTests

# Stage 2: Runtime
FROM openjdk:17-jre-slim

# Installer les dépendances pour Cloud SQL Proxy
RUN apt-get update && \
    apt-get install -y wget && \
    rm -rf /var/lib/apt/lists/*

# Créer un utilisateur non-root pour la sécurité
RUN groupadd -r appuser && useradd -r -g appuser appuser

# Créer les répertoires nécessaires
RUN mkdir -p /app /cloudsql && \
    chown -R appuser:appuser /app /cloudsql

# Copier l'application depuis le stage de build
COPY --from=builder /app/target/*.jar /app/app.jar

# Changer vers l'utilisateur non-root
USER appuser

# Variables d'environnement par défaut
ENV SPRING_PROFILES_ACTIVE=prod
ENV SERVER_PORT=8080
ENV JAVA_OPTS="-Xmx512m -Xms256m"

# Exposer le port
EXPOSE 8080

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD wget --no-verbose --tries=1 --spider http://localhost:8080/actuator/health || exit 1

# Point d'entrée
ENTRYPOINT ["sh", "-c", "java $JAVA_OPTS -jar /app/app.jar"]

# Labels pour la métadonnée
LABEL maintainer="platform-team@entreprise.com"
LABEL version="1.0"
LABEL description="Application Spring Boot pour centralisation de données" 