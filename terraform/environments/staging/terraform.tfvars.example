# Configuration Staging - Exemple
# Copiez ce fichier vers terraform.tfvars et adaptez les valeurs

# Configuration du projet
project_id       = "your-project-id-staging"     # ID de votre projet GCP
project_name     = "data-centralization"         # Nom de votre projet
billing_account  = "XXXXXX-XXXXXX-XXXXXX"       # ID de votre compte de facturation
environment      = "staging"                     # Ne pas modifier
region          = "europe-west1"                 # Région GCP

# Labels
team         = "platform"                        # Équipe responsable
cost_center  = "engineering"                     # Centre de coût

# Configuration réseau
services_subnet_cidr     = "10.1.0.0/24"        # CIDR pour les services
database_subnet_cidr     = "10.2.0.0/24"        # CIDR pour la base de données
services_secondary_cidr  = "10.3.0.0/16"        # CIDR secondaire
vpc_connector_cidr       = "10.8.0.0/28"        # CIDR pour le connecteur VPC

# Configuration Cloud SQL
database_tier           = "db-custom-2-4096"    # 2 vCPU, 4 GB RAM
disk_size              = 50                     # Taille du disque en GB
max_disk_size          = 100                    # Taille maximale du disque en GB
max_connections        = "200"                  # Nombre maximal de connexions
database_name          = "app_db"               # Nom de la base de données
database_user          = "app_user"             # Utilisateur de l'application
point_in_time_recovery = true                   # Récupération point-in-time
backup_retention_days  = 14                     # 14 jours de rétention
enable_read_replica    = false                  # Pas de réplica en staging

# Configuration Cloud Run
cloud_run_min_instances = 1                     # Minimum 1 instance
cloud_run_max_instances = 10                    # Maximum 10 instances
cloud_run_cpu_limit    = "1000m"               # 1 vCPU
cloud_run_memory_limit = "1Gi"                 # 1 GB RAM
allow_public_access    = true                   # Accès public autorisé

# Configuration Docker
docker_registry = {
  server   = "registry.example.com"            # URL de votre registre privé
  username = "your-username"                   # Nom d'utilisateur
  password = "your-password"                   # Mot de passe
}
docker_image_url = "registry.example.com/your-app:latest"  # URL de votre image

# Configuration monitoring
notification_emails     = ["staging-team@example.com"]  # Emails pour les notifications
slack_webhook_url      = "https://hooks.slack.com/services/XXXXX/YYYYY/ZZZZZ"  # Webhook Slack
latency_threshold_ms   = 2000                  # Seuil de latence en ms
error_rate_threshold   = 5                     # Seuil de taux d'erreur
cpu_threshold         = 0.8                    # Seuil d'utilisation CPU
memory_threshold      = 0.8                    # Seuil d'utilisation mémoire
sql_connections_threshold = 100                # Seuil de connexions SQL
enable_log_sink       = true                   # Activé pour staging

# Sécurité
deletion_protection     = true                 # Protection contre la suppression
enable_audit_logs      = true                 # Logs d'audit activés
require_ssl            = true                 # SSL requis
enable_pgaudit        = false                # pgAudit désactivé
log_min_duration_statement = 2000            # Log des requêtes > 2s

# Budget
budget_amount = 250                          # Budget mensuel en euros

# Configuration globale - À MODIFIER
vpc_cidr_range               = "10.1.0.0/16"
private_subnet_cidr         = "10.1.1.0/24"
public_subnet_cidr          = "10.1.2.0/24"
pods_cidr_range             = "10.1.16.0/20"
services_cidr_range         = "10.1.32.0/20"
authorized_networks         = []                # Pas d'accès direct en staging

# Configuration Cloud SQL - Staging (intermédiaire)
high_availability          = true                  # HA activé
backup_location           = "europe-west1"
maintenance_window_day    = 6                      # Vendredi
maintenance_window_hour   = 2                      # 02:00 UTC
read_replica_count        = 1                      # 1 réplica
replica_tier              = "db-custom-2-4096"

# Configuration Cloud Run - Staging
cloud_run_concurrency       = 80                   # 80 requêtes simultanées
cloud_run_timeout_seconds   = 300                  # Timeout 5 minutes
cloud_run_cpu_throttling    = false                # Pas de throttling

# Monitoring
sql_connections_threshold = 100                    # 100 connexions

# Budget et coûts
budget_alert_thresholds    = [0.5, 0.8, 1.0]     # Alertes multiples

# Configuration Artifact Registry
registry_format             = "DOCKER"
registry_description        = "Staging Docker registry pour centralisation de données"

# Configuration monitoring et alertes - À MODIFIER
enable_monitoring           = true
alert_email                = "staging-team@example.com"   # Remplacez par votre email

# Configuration spécifique staging
skip_final_snapshot       = false                # Snapshot obligatoire
enable_performance_insights = true               # Performance insights
enable_query_insights      = true

# Labels
labels = {
  environment   = "staging"
  project       = "data-centralization"
  team          = "platform"                     # Remplacez par votre équipe
  cost-center   = "engineering"                      # Remplacez par votre centre de coût
  backup        = "required"
  monitoring    = "enhanced"
  compliance    = "required"
  data-class    = "internal"
}

# Configuration des secrets
enable_secret_manager      = true
secret_locations          = ["europe-west1", "europe-west4"]  # Multi-région

# Configuration backup
backup_cross_region        = true
backup_location_secondary  = "europe-west4"
enable_point_in_time_recovery = true

# Performance
enable_connection_pooling  = true
shared_preload_libraries  = "pg_stat_statements"  # Stats basiques

# Monitoring intermédiaire
enable_slow_query_log     = true
slow_query_threshold      = "2s"               # Seuil modéré
enable_connection_logging = true
enable_checkpoints_logging = false

# Sécurité intermédiaire
ssl_mode                 = "ENCRYPTED_ONLY"
log_statement            = "mod"              # Log des modifications
log_retention_days         = 30                  # Rétention 30 jours

# Configuration spécifique staging
deletion_protection        = true                # Protection activée
skip_final_snapshot       = false                # Snapshot obligatoire
enable_performance_insights = true               # Performance insights
enable_query_insights      = true

# Configuration spécifique staging
deletion_protection        = true                # Protection activée
skip_final_snapshot       = false                # Snapshot obligatoire
enable_performance_insights = true               # Performance insights
enable_query_insights      = true

# Labels
labels = {
  environment   = "staging"
  project       = "data-centralization"
  team          = "platform"                     # Remplacez par votre équipe
  cost-center   = "engineering"                      # Remplacez par votre centre de coût
  backup        = "required"
  monitoring    = "enhanced"
  compliance    = "required"
  data-class    = "internal"
}

# Configuration des secrets
enable_secret_manager      = true
secret_locations          = ["europe-west1", "europe-west4"]  # Multi-région

# Configuration backup
backup_cross_region        = true
backup_location_secondary  = "europe-west4"
enable_point_in_time_recovery = true

# Performance
enable_connection_pooling  = true
max_connections           = 100                 # Plus de connexions
shared_preload_libraries  = "pg_stat_statements"  # Stats basiques

# Monitoring intermédiaire
enable_slow_query_log     = true
slow_query_threshold      = "2s"               # Seuil modéré
enable_connection_logging = true
enable_checkpoints_logging = false

# Sécurité intermédiaire
require_ssl               = true               # SSL obligatoire
ssl_mode                 = "ENCRYPTED_ONLY"
enable_pgaudit           = false              # pgAudit optionnel
log_statement            = "mod"              # Log des modifications
log_min_duration_statement = 2000             # Log requêtes > 2s

# Variables d'environnement supplémentaires pour l'application
environment_variables = {
  "EXTERNAL_API_URL"     = "https://api.staging.exemple.com"
  "SHEETS_API_ENABLED"   = "true"
  "LOG_LEVEL"           = "INFO"                  # Niveau de log standard
  "FEATURE_FLAG_X"      = "enabled"              # Test des features avant prod
} 