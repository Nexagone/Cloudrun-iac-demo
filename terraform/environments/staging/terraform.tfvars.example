# Configuration Staging - Exemple
# Copiez ce fichier vers terraform.tfvars et adaptez les valeurs

# Configuration globale - À MODIFIER
project_id   = "votre-project-id-staging"      # Remplacez par votre project ID
environment  = "staging"
region       = "europe-west1"

# Configuration réseau
vpc_cidr_range               = "10.1.0.0/16"
private_subnet_cidr         = "10.1.1.0/24"
public_subnet_cidr          = "10.1.2.0/24"
pods_cidr_range             = "10.1.16.0/20"
services_cidr_range         = "10.1.32.0/20"
authorized_networks         = []                # Pas d'accès direct en staging

# Configuration Cloud SQL - Staging (intermédiaire)
database_tier                = "db-custom-2-4096"  # 2 vCPU, 4 GB RAM
disk_size                   = 50                    # 50 GB
max_disk_size              = 200                   # Limite auto-resize
high_availability          = true                  # HA activé
backup_retention_days      = 14                    # 14 jours
backup_location           = "europe-west1"
point_in_time_recovery    = true                   # PITR activé
maintenance_window_day    = 6                      # Vendredi
maintenance_window_hour   = 2                      # 02:00 UTC
read_replica_count        = 1                      # 1 réplica
replica_tier              = "db-custom-2-4096"

# Configuration Cloud Run - Staging
cloud_run_cpu_limit         = "1000m"              # 1 vCPU
cloud_run_memory_limit      = "1Gi"                # 1 GB RAM
cloud_run_min_instances     = 1                    # Toujours 1 instance
cloud_run_max_instances     = 10                   # Maximum 10 instances
cloud_run_concurrency       = 80                   # 80 requêtes simultanées
cloud_run_timeout_seconds   = 300                  # Timeout 5 minutes
cloud_run_cpu_throttling    = false                # Pas de throttling

# Monitoring
notification_emails         = ["team@example.com"]
latency_threshold_ms       = 2000                  # 2 secondes
error_rate_threshold       = 5                     # 5%
cpu_threshold             = 0.8                    # 80%
memory_threshold          = 0.8                    # 80%
sql_connections_threshold = 100                    # 100 connexions

# Budget
budget_amount             = 300                    # 300€/mois

# Configuration Artifact Registry
registry_format             = "DOCKER"
registry_description        = "Staging Docker registry pour centralisation de données"

# Configuration monitoring et alertes - À MODIFIER
enable_monitoring           = true
alert_email                = "staging-team@example.com"   # Remplacez par votre email
slack_webhook_url          = "https://hooks.slack.com/services/STAGING/WEBHOOK"  # URL Slack
sms_number                 = ""                           # SMS optionnel

# Budget et coûts
budget_alert_thresholds    = [0.5, 0.8, 1.0]     # Alertes multiples

# Sécurité
enable_private_ip          = true
enable_ssl_redirect        = true
enable_armor               = true                 # Cloud Armor activé
allowed_source_ranges      = ["0.0.0.0/0"]
enable_audit_logs          = true                # Audit logs activés
log_retention_days         = 30                  # Rétention 30 jours

# Configuration spécifique staging
deletion_protection        = true                # Protection activée
skip_final_snapshot       = false                # Snapshot obligatoire
enable_performance_insights = true               # Performance insights
enable_query_insights      = true

# Labels
labels = {
  environment   = "staging"
  project       = "data-centralization"
  team          = "platform"                     # Remplacez par votre équipe
  cost-center   = "testing"                      # Remplacez par votre centre de coût
  backup        = "required"
  monitoring    = "enhanced"
  compliance    = "required"
  data-class    = "internal"
}

# Configuration des secrets
enable_secret_manager      = true
secret_locations          = ["europe-west1", "europe-west4"]  # Multi-région

# Configuration backup
backup_cross_region        = true
backup_location_secondary  = "europe-west4"
enable_point_in_time_recovery = true

# Performance
enable_connection_pooling  = true
max_connections           = 100                 # Plus de connexions
shared_preload_libraries  = "pg_stat_statements"  # Stats basiques

# Monitoring intermédiaire
enable_slow_query_log     = true
slow_query_threshold      = "2s"               # Seuil modéré
enable_connection_logging = true
enable_checkpoints_logging = false

# Sécurité intermédiaire
require_ssl               = true               # SSL obligatoire
ssl_mode                 = "ENCRYPTED_ONLY"
enable_pgaudit           = false              # pgAudit optionnel
log_statement            = "mod"              # Log des modifications
log_min_duration_statement = 2000             # Log requêtes > 2s 