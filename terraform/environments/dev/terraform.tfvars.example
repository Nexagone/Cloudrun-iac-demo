# Configuration Développement - Exemple
# Copiez ce fichier vers terraform.tfvars et adaptez les valeurs

# Configuration du projet
project_id       = "your-project-id-dev"          # ID de votre projet GCP
project_name     = "data-centralization"          # Nom de votre projet
billing_account  = "XXXXXX-XXXXXX-XXXXXX"        # ID de votre compte de facturation
environment      = "dev"                          # Ne pas modifier
region          = "europe-west1"                  # Région GCP

# Labels
team         = "platform"                         # Équipe responsable
cost_center  = "engineering"                      # Centre de coût

# Configuration réseau
services_subnet_cidr     = "10.1.0.0/24"         # CIDR pour les services
database_subnet_cidr     = "10.2.0.0/24"         # CIDR pour la base de données
services_secondary_cidr  = "10.3.0.0/16"         # CIDR secondaire
vpc_connector_cidr       = "10.8.0.0/28"         # CIDR pour le connecteur VPC

# Configuration Cloud SQL
database_tier           = "db-f1-micro"          # Tier minimal pour dev
disk_size              = 20                      # Taille du disque en GB
max_disk_size          = 50                      # Taille maximale du disque en GB
max_connections        = "50"                    # Nombre maximal de connexions
database_name          = "app_db"                # Nom de la base de données
database_user          = "app_user"              # Utilisateur de l'application
point_in_time_recovery = false                   # Récupération point-in-time

# Configuration Cloud Run
cloud_run_min_instances = 0                      # Scale to zero activé
cloud_run_max_instances = 5                      # Maximum 5 instances
cloud_run_cpu_limit    = "1000m"                # 1 vCPU
cloud_run_memory_limit = "512Mi"                # 512 MB RAM
allow_public_access    = true                    # Accès public autorisé

# Configuration Docker
docker_registry = {
  server   = "registry.example.com"             # URL de votre registre privé
  username = "your-username"                    # Nom d'utilisateur
  password = "your-password"                    # Mot de passe
}
docker_image_url = "registry.example.com/your-app:latest"  # URL de votre image

# Configuration monitoring
notification_emails     = ["dev-team@example.com"]  # Emails pour les notifications
slack_webhook_url      = "https://hooks.slack.com/services/XXXXX/YYYYY/ZZZZZ"  # Webhook Slack
latency_threshold_ms   = 5000                   # Seuil de latence en ms
error_rate_threshold   = 10                     # Seuil de taux d'erreur
cpu_threshold         = 0.9                     # Seuil d'utilisation CPU
memory_threshold      = 0.9                     # Seuil d'utilisation mémoire
sql_connections_threshold = 50                  # Seuil de connexions SQL
enable_log_sink       = false                   # Désactivé pour dev

# Budget
budget_amount = 50                              # Budget mensuel en euros

# Variables d'environnement supplémentaires pour l'application
environment_variables = {
  "EXTERNAL_API_URL"     = "https://api.dev.exemple.com"
  "SHEETS_API_ENABLED"   = "true"
  "LOG_LEVEL"           = "DEBUG"
  "FEATURE_FLAG_X"      = "enabled"
}

# Configuration globale - À MODIFIER
project_id   = "votre-project-id-dev"           # Remplacez par votre project ID
environment  = "dev"
region       = "europe-west1"

# Configuration réseau
vpc_cidr_range               = "10.0.0.0/16"
private_subnet_cidr         = "10.0.1.0/24"
public_subnet_cidr          = "10.0.2.0/24"
pods_cidr_range             = "10.0.16.0/20"
services_cidr_range         = "10.0.32.0/20"
authorized_networks         = [
  {
    name  = "dev-office"
    value = "203.0.113.0/24"              # Remplacez par votre IP office
  }
]

# Configuration Cloud SQL - Développement (économique)
high_availability          = false                 # Pas de HA en dev
backup_retention_days      = 7                     # 7 jours seulement
backup_location           = "europe-west1"
read_replica_count        = 0                      # Pas de réplicas
replica_tier              = "db-custom-1-2048"

# Configuration Cloud Run - Développement
cloud_run_concurrency       = 50                   # 50 requêtes simultanées
cloud_run_timeout_seconds   = 300                  # Timeout 5 minutes
cloud_run_cpu_throttling    = true                 # Throttling activé

# Configuration Artifact Registry
registry_format             = "DOCKER"
registry_description        = "Development Docker registry pour centralisation de données"

# Configuration monitoring et alertes - À MODIFIER
enable_monitoring           = true
alert_email                = "dev-team@example.com"     # Remplacez par votre email
slack_webhook_url          = ""                         # URL Slack optionnelle
sms_number                 = ""                         # SMS optionnel

# Budget et coûts
budget_alert_thresholds    = [0.8, 1.0]          # Alertes à 80% et 100%

# Sécurité
enable_private_ip          = true
enable_ssl_redirect        = true
enable_armor               = false                # Pas de Cloud Armor en dev
allowed_source_ranges      = ["0.0.0.0/0"]
enable_audit_logs          = false               # Pas d'audit logs en dev
log_retention_days         = 7                   # Rétention courte

# Configuration spécifique développement
deletion_protection        = false               # Pas de protection en dev
skip_final_snapshot       = true                 # Pas de snapshot final
enable_performance_insights = false              # Pas d'insights en dev
enable_query_insights      = false

# Labels
labels = {
  environment   = "dev"
  project       = "data-centralization"
  team          = "platform"                     # Remplacez par votre équipe
  cost-center   = "development"                  # Remplacez par votre centre de coût
  backup        = "optional"
  monitoring    = "basic"
  compliance    = "not-required"
  data-class    = "public"
}

# Configuration des secrets
enable_secret_manager      = true
secret_locations          = ["europe-west1"]    # Single région pour dev

# Configuration backup (simplifiée pour dev)
backup_cross_region        = false
backup_location_secondary  = ""
enable_point_in_time_recovery = false

# Performance (basique pour dev)
enable_connection_pooling  = false
shared_preload_libraries  = ""                 # Pas de libs supplémentaires

# Monitoring basique
enable_slow_query_log     = false
slow_query_threshold      = "5s"               # Seuil élevé
enable_connection_logging = false
enable_checkpoints_logging = false

# Sécurité basique
require_ssl               = false              # SSL optionnel en dev
ssl_mode                 = "ALLOW_UNENCRYPTED_AND_ENCRYPTED"
enable_pgaudit           = false              # Pas d'audit en dev
log_statement            = "none"             # Pas de logs statements
log_min_duration_statement = -1               # Désactivé 