# Configuration Production - Exemple
# Copiez ce fichier vers terraform.tfvars et adaptez les valeurs
# ‚ö†Ô∏è  ATTENTION: Configuration critique pour la production

# Configuration du projet
project_id       = "your-project-id-prod"      # ID de votre projet GCP
project_name     = "data-centralization"       # Nom de votre projet
billing_account  = "XXXXXX-XXXXXX-XXXXXX"     # ID de votre compte de facturation
environment      = "prod"                      # Ne pas modifier
region          = "europe-west1"               # R√©gion GCP

# Configuration r√©seau
services_subnet_cidr     = "10.2.3.0/24"      # CIDR pour les services
database_subnet_cidr     = "10.2.4.0/24"      # CIDR pour la base de donn√©es
services_secondary_cidr  = "10.2.5.0/24"      # CIDR secondaire
vpc_connector_cidr       = "10.8.0.0/28"      # CIDR pour le connecteur VPC

# Configuration Cloud SQL
database_tier           = "db-custom-4-8192"  # 4 vCPU, 8 GB RAM
disk_size              = 100                  # Taille du disque en GB
max_disk_size          = 500                  # Taille maximale du disque en GB
max_connections        = 200                  # Nombre maximal de connexions
database_name          = "app_db"             # Nom de la base de donn√©es
database_user          = "app_user"           # Utilisateur de l'application
backup_location        = "europe-west4"       # Backup dans une autre r√©gion
point_in_time_recovery = true               # R√©cup√©ration point-in-time activ√©e
deletion_protection    = true               # Protection contre la suppression

# Configuration Docker
docker_registry = {
  server   = "registry.example.com"          # URL de votre registre priv√©
  username = "your-username"                 # Nom d'utilisateur
  password = "your-password"                 # Mot de passe
}
docker_image_url = "registry.example.com/your-app:latest"  # URL de votre image

# Configuration monitoring
notification_emails     = ["prod-team@example.com", "oncall@example.com"]  # Emails pour les notifications
latency_threshold_ms   = 1000                # Seuil de latence en ms
error_rate_threshold   = 2                   # Seuil de taux d'erreur
cpu_threshold         = 0.7                  # Seuil d'utilisation CPU
memory_threshold      = 0.7                  # Seuil d'utilisation m√©moire
sql_connections_threshold = 150              # Seuil de connexions SQL
enable_log_sink       = true                 # Activ√© pour production

# Labels obligatoires
labels = {
  environment   = "prod"
  project       = "data-centralization"
  team          = "platform"
  cost-center   = "it-infrastructure"
  backup        = "required"
  monitoring    = "critical"
  compliance    = "required"
  data-class    = "confidential"
}

# Configuration backup et disaster recovery
backup_cross_region        = true            # Backup multi-r√©gion
backup_location_secondary  = "europe-west4"  # R√©gion secondaire
enable_point_in_time_recovery = true        # PITR activ√©
backup_retention_days      = 30             # 30 jours de r√©tention

# Performance et scaling
enable_connection_pooling  = true
max_connections           = 200
shared_preload_libraries  = "pg_stat_statements,auto_explain"

# Monitoring avanc√©
enable_slow_query_log     = true
slow_query_threshold      = "1s"
enable_connection_logging = true
enable_checkpoints_logging = true

# Compliance et s√©curit√© renforc√©e
require_ssl               = true
ssl_mode                 = "ENCRYPTED_ONLY"
enable_pgaudit           = true
log_statement            = "all"
log_min_duration_statement = 1000  # Log requ√™tes > 1s

# Budget
budget_amount = 500  # Budget mensuel en euros

# Configuration globale - √Ä MODIFIER
vpc_cidr_range               = "10.2.0.0/16"
private_subnet_cidr         = "10.2.1.0/24"
public_subnet_cidr          = "10.2.2.0/24"
pods_cidr_range             = "10.2.16.0/20"
services_cidr_range         = "10.2.32.0/20"
authorized_networks         = []                # Pas d'acc√®s direct en prod

# Configuration Cloud SQL - Production (haute performance)
high_availability          = true                  # HA obligatoire
maintenance_window_day    = 7                      # Dimanche
maintenance_window_hour   = 2                      # 02:00 UTC
read_replica_count        = 2                      # 2 r√©plicas
replica_tier              = "db-custom-4-8192"     # M√™me tier que principal

# Configuration Cloud Run - Production
cloud_run_cpu_limit         = "2000m"              # 2 vCPU
cloud_run_memory_limit      = "2Gi"                # 2 GB RAM
cloud_run_min_instances     = 2                    # Minimum 2 instances
cloud_run_max_instances     = 100                  # Maximum 100 instances
cloud_run_concurrency       = 100                  # 100 requ√™tes simultan√©es
cloud_run_timeout_seconds   = 300                  # Timeout 5 minutes
cloud_run_cpu_throttling    = false                # Pas de throttling
allow_public_access         = true                 # Acc√®s public autoris√©

# Configuration Artifact Registry
registry_format             = "DOCKER"
registry_description        = "Production Docker registry pour centralisation de donn√©es"

# Configuration monitoring et alertes - √Ä MODIFIER OBLIGATOIREMENT
enable_monitoring           = true
alert_email                = "ops-team@votre-entreprise.com"      # Email √©quipe OPS
slack_webhook_url          = "https://hooks.slack.com/services/XXXXX/YYYYY/ZZZZZ"  # Slack PROD
sms_number                 = "+33123456789"                       # SMS pour alertes critiques

# Monitoring
cpu_threshold             = 0.7                    # 70%
memory_threshold          = 0.7                    # 70%
sql_connections_threshold = 200                    # 200 connexions

# Budget
budget_alert_thresholds    = [0.5, 0.8, 0.9, 1.0]  # Alertes progressives

# S√©curit√© RENFORC√âE
enable_private_ip          = true
enable_ssl_redirect        = true
enable_armor               = true                 # Cloud Armor OBLIGATOIRE
allowed_source_ranges      = ["0.0.0.0/0"]       # Restriction via Cloud Armor
enable_audit_logs          = true                # Audit logs OBLIGATOIRES
log_retention_days         = 90                  # R√©tention 90 jours

# Configuration sp√©cifique production - CRITIQUE
skip_final_snapshot       = false                # Snapshot OBLIGATOIRE
enable_performance_insights = true               # Insights OBLIGATOIRES
enable_query_insights      = true

# Configuration des secrets - Multi-r√©gion
enable_secret_manager      = true
secret_locations          = ["europe-west1", "europe-west4"]  # Multi-r√©gion OBLIGATOIRE

# Performance OPTIMIS√âE
max_connections           = 200                 # Connexions optimis√©es

# Monitoring COMPLET
enable_slow_query_log     = true
slow_query_threshold      = "1s"               # Seuil strict
enable_connection_logging = true
enable_checkpoints_logging = true

# S√©curit√© MAXIMALE
ssl_mode                 = "ENCRYPTED_ONLY"    # Chiffrement strict
enable_pgaudit           = true               # Audit PostgreSQL
log_statement            = "all"              # Log TOUTES les requ√™tes
log_min_duration_statement = 1000             # Log requ√™tes > 1s

# Variables d'environnement suppl√©mentaires pour l'application
environment_variables = {
  "EXTERNAL_API_URL"     = "https://api.production.exemple.com"
  "SHEETS_API_ENABLED"   = "true"
  "LOG_LEVEL"           = "WARN"                  # Niveau de log minimal en prod
  "FEATURE_FLAG_X"      = "disabled"             # Features test√©es uniquement
}

# üìù NOTES IMPORTANTES:
# - V√©rifiez TOUS les emails et webhooks
# - Testez les alertes avant la mise en production
# - Configurez les budgets selon votre organisation
# - Adaptez les IP autoris√©es √† votre infrastructure
# - Documentez toute modification 